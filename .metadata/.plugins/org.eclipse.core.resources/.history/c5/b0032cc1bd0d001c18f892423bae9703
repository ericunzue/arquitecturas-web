package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import connection.MySqlConnection;
import daoInterface.ClienteDao;
import pojo.Cliente;

public class MySqlImplClienteDao implements ClienteDao{

	private Connection conn = MySqlConnection.getConnection();


	public MySqlImplClienteDao() {
		createTable();
	}

	private void createTable() {

		String sql = "CREATE TABLE IF NOT EXISTS cliente(" + "idCliente INT NOT NULL AUTO_INCREMENT,"
				+ "nombre VARCHAR(500)," + "email VARCHAR(500)," + "PRIMARY KEY (idCliente))";

		try {
			conn.prepareStatement(sql).execute();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}


	@Override
	public void create(Cliente cliente) throws SQLException {
		String sql = "INSERT INTO cliente (nombre, email) VALUES (?,?)";

		try {
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setString(1, cliente.getNombre());
			ps.setString(2, cliente.getEmail());
			ps.executeUpdate();
			ps.close();
			conn.commit();
		} catch (Exception e) {
			e.getMessage();
		}
		System.out.println("Insert cliente successfull");
	}


	@Override
	public boolean delete(int id) throws SQLException {
		String sql = "DELETE FROM cliente WHERE idCliente=?";
		int response = 0;
		try {

			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, id);
			response = ps.executeUpdate();
			ps.close();
			conn.commit();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return response!=0;
	}


	@Override
	public Cliente get(int id) throws SQLException {

		Cliente c = new Cliente();
		String sql = "SELECT * FROM cliente WHERE idCliente=?";

		try {

			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();

			while (rs.next()) {
				c.setIdCliente(rs.getInt(1));
				c.setNombre(rs.getString(2));
				c.setEmail(rs.getString(3));
			}

			conn.commit();

		} catch (Exception e) {
			System.err.println("Get error");
		}

		return c;
	}


	@Override
	public List<Cliente> getAll() throws SQLException {
		List <Cliente> listaClientes = new ArrayList<Cliente>();
		String sql = "SELECT * FROM cliente";

		try {

			PreparedStatement ps = conn.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();

			while (rs.next()) {
				Cliente c = new Cliente();
				c.setIdCliente(rs.getInt(1));
				c.setNombre(rs.getString(2));
				c.setEmail(rs.getString(3));
				listaClientes.add(c);
			}

		}catch(Exception e) {
			e.printStackTrace();
		}
		return listaClientes;
	}


	@Override
	public List<Cliente> getClientByBilling() throws SQLException {
		List <Cliente> listaClientes = new ArrayList<Cliente>();
		String sql = "SELECT * FROM cliente";

		try {
			PreparedStatement ps = conn.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();

			while (rs.next()) {
				Cliente c = new Cliente();
				c.setIdCliente(rs.getInt(1));
				c.setNombre(rs.getString(2));
				c.setEmail(rs.getString(3));
				listaClientes.add(c);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return listaClientes;
	}

}
